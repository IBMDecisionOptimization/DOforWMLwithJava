// --------------------------------------------------------------------------
// IBM ILOG CP Optimizer model export file
// Effective workers: 16
// --------------------------------------------------------------------------

// ------ Integer variables: ------------------------------------------------

"open(0)" = intVar(0..1);
"open(1)" = intVar(0..1);
"open(2)" = intVar(0..1);
"open(3)" = intVar(0..1);
"open(4)" = intVar(0..1);
"open(5)" = intVar(0..1);
"open(6)" = intVar(0..1);
"open(7)" = intVar(0..1);
"open(8)" = intVar(0..1);
"open(9)" = intVar(0..1);
"open(10)" = intVar(0..1);
"open(11)" = intVar(0..1);
"open(12)" = intVar(0..1);
"open(13)" = intVar(0..1);
"open(14)" = intVar(0..1);
"open(15)" = intVar(0..1);
"open(16)" = intVar(0..1);
"open(17)" = intVar(0..1);
"open(18)" = intVar(0..1);
"open(19)" = intVar(0..1);
"open(20)" = intVar(0..1);
"open(21)" = intVar(0..1);
"open(22)" = intVar(0..1);
"open(23)" = intVar(0..1);
"open(24)" = intVar(0..1);
"open(25)" = intVar(0..1);
"open(26)" = intVar(0..1);
"open(27)" = intVar(0..1);
"open(28)" = intVar(0..1);
"open(29)" = intVar(0..1);
"cust(0)" = intVar(0..29);
"cust(1)" = intVar(0..29);
"cust(2)" = intVar(0..29);
"cust(3)" = intVar(0..29);
"cust(4)" = intVar(0..29);
"cust(5)" = intVar(0..29);
"cust(6)" = intVar(0..29);
"cust(7)" = intVar(0..29);
"cust(8)" = intVar(0..29);
"cust(9)" = intVar(0..29);
"cust(10)" = intVar(0..29);
"cust(11)" = intVar(0..29);
"cust(12)" = intVar(0..29);
"cust(13)" = intVar(0..29);
"cust(14)" = intVar(0..29);
"cust(15)" = intVar(0..29);
"cust(16)" = intVar(0..29);
"cust(17)" = intVar(0..29);
"cust(18)" = intVar(0..29);
"cust(19)" = intVar(0..29);
"cust(20)" = intVar(0..29);
"cust(21)" = intVar(0..29);
"cust(22)" = intVar(0..29);
"cust(23)" = intVar(0..29);
"cust(24)" = intVar(0..29);
"cust(25)" = intVar(0..29);
"cust(26)" = intVar(0..29);
"cust(27)" = intVar(0..29);
"cust(28)" = intVar(0..29);
"cust(29)" = intVar(0..29);
"cust(30)" = intVar(0..29);
"cust(31)" = intVar(0..29);
"cust(32)" = intVar(0..29);
"cust(33)" = intVar(0..29);
"cust(34)" = intVar(0..29);
"cust(35)" = intVar(0..29);
"cust(36)" = intVar(0..29);
"cust(37)" = intVar(0..29);
"cust(38)" = intVar(0..29);
"cust(39)" = intVar(0..29);
"cust(40)" = intVar(0..29);
"cust(41)" = intVar(0..29);
"cust(42)" = intVar(0..29);
"cust(43)" = intVar(0..29);
"cust(44)" = intVar(0..29);
"cust(45)" = intVar(0..29);
"cust(46)" = intVar(0..29);
"cust(47)" = intVar(0..29);
"cust(48)" = intVar(0..29);
"cust(49)" = intVar(0..29);
"cust(50)" = intVar(0..29);
"cust(51)" = intVar(0..29);
"cust(52)" = intVar(0..29);
"cust(53)" = intVar(0..29);
"cust(54)" = intVar(0..29);
"cust(55)" = intVar(0..29);
"cust(56)" = intVar(0..29);
"cust(57)" = intVar(0..29);
"cust(58)" = intVar(0..29);
"cust(59)" = intVar(0..29);
"cust(60)" = intVar(0..29);
"cust(61)" = intVar(0..29);
"cust(62)" = intVar(0..29);
"cust(63)" = intVar(0..29);
"cust(64)" = intVar(0..29);
"cust(65)" = intVar(0..29);
"cust(66)" = intVar(0..29);
"cust(67)" = intVar(0..29);
"cust(68)" = intVar(0..29);
"cust(69)" = intVar(0..29);
"cust(70)" = intVar(0..29);
"cust(71)" = intVar(0..29);
"cust(72)" = intVar(0..29);
"cust(73)" = intVar(0..29);
"cust(74)" = intVar(0..29);
"cust(75)" = intVar(0..29);
"cust(76)" = intVar(0..29);
"cust(77)" = intVar(0..29);
"cust(78)" = intVar(0..29);
"cust(79)" = intVar(0..29);
"cust(80)" = intVar(0..29);
"cust(81)" = intVar(0..29);
"cust(82)" = intVar(0..29);
"cust(83)" = intVar(0..29);
"cust(84)" = intVar(0..29);
"cust(85)" = intVar(0..29);
"cust(86)" = intVar(0..29);
"cust(87)" = intVar(0..29);
"cust(88)" = intVar(0..29);
"cust(89)" = intVar(0..29);
"load(0)" = intVar(0..137);
"load(1)" = intVar(0..122);
"load(2)" = intVar(0..87);
"load(3)" = intVar(0..125);
"load(4)" = intVar(0..120);
"load(5)" = intVar(0..47);
"load(6)" = intVar(0..42);
"load(7)" = intVar(0..157);
"load(8)" = intVar(0..60);
"load(9)" = intVar(0..134);
"load(10)" = intVar(0..35);
"load(11)" = intVar(0..120);
"load(12)" = intVar(0..185);
"load(13)" = intVar(0..86);
"load(14)" = intVar(0..110);
"load(15)" = intVar(0..115);
"load(16)" = intVar(0..184);
"load(17)" = intVar(0..107);
"load(18)" = intVar(0..188);
"load(19)" = intVar(0..96);
"load(20)" = intVar(0..82);
"load(21)" = intVar(0..68);
"load(22)" = intVar(0..161);
"load(23)" = intVar(0..123);
"load(24)" = intVar(0..36);
"load(25)" = intVar(0..49);
"load(26)" = intVar(0..178);
"load(27)" = intVar(0..179);
"load(28)" = intVar(0..108);
"load(29)" = intVar(0..90);

// ------ Expressions: ------------------------------------------------------

Plus_101 = "cust(0)" + 0 * 30;
Plus_113 = "cust(1)" + 30 * 1;
Plus_126 = "cust(2)" + 30 * 2;
Plus_140 = "cust(3)" + 30 * 3;
Plus_154 = "cust(4)" + 30 * 4;
Plus_168 = "cust(5)" + 30 * 5;
Plus_182 = "cust(6)" + 30 * 6;
Plus_196 = "cust(7)" + 30 * 7;
Plus_210 = "cust(8)" + 30 * 8;
Plus_224 = "cust(9)" + 30 * 9;
Plus_238 = "cust(10)" + 30 * 10;
Plus_252 = "cust(11)" + 30 * 11;
Plus_266 = "cust(12)" + 30 * 12;
Plus_280 = "cust(13)" + 30 * 13;
Plus_294 = "cust(14)" + 30 * 14;
Plus_308 = "cust(15)" + 30 * 15;
Plus_322 = "cust(16)" + 30 * 16;
Plus_336 = "cust(17)" + 30 * 17;
Plus_350 = "cust(18)" + 30 * 18;
Plus_364 = "cust(19)" + 30 * 19;
Plus_378 = "cust(20)" + 30 * 20;
Plus_392 = "cust(21)" + 30 * 21;
Plus_406 = "cust(22)" + 30 * 22;
Plus_420 = "cust(23)" + 30 * 23;
Plus_434 = "cust(24)" + 30 * 24;
Plus_448 = "cust(25)" + 30 * 25;
Plus_462 = "cust(26)" + 30 * 26;
Plus_476 = "cust(27)" + 30 * 27;
Plus_490 = "cust(28)" + 30 * 28;
Plus_503 = "cust(29)" + 29 * 30;
Plus_516 = "cust(30)" + 30 * 30;
Plus_530 = "cust(31)" + 30 * 31;
Plus_544 = "cust(32)" + 30 * 32;
Plus_558 = "cust(33)" + 30 * 33;
Plus_572 = "cust(34)" + 30 * 34;
Plus_585 = "cust(35)" + 30 * 35;
Plus_599 = "cust(36)" + 30 * 36;
Plus_613 = "cust(37)" + 30 * 37;
Plus_627 = "cust(38)" + 30 * 38;
Plus_641 = "cust(39)" + 30 * 39;
Plus_655 = "cust(40)" + 30 * 40;
Plus_669 = "cust(41)" + 30 * 41;
Plus_683 = "cust(42)" + 30 * 42;
Plus_697 = "cust(43)" + 30 * 43;
Plus_711 = "cust(44)" + 30 * 44;
Plus_725 = "cust(45)" + 30 * 45;
Plus_739 = "cust(46)" + 30 * 46;
Plus_753 = "cust(47)" + 30 * 47;
Plus_767 = "cust(48)" + 30 * 48;
Plus_781 = "cust(49)" + 30 * 49;
Plus_795 = "cust(50)" + 30 * 50;
Plus_809 = "cust(51)" + 30 * 51;
Plus_823 = "cust(52)" + 30 * 52;
Plus_837 = "cust(53)" + 30 * 53;
Plus_851 = "cust(54)" + 30 * 54;
Plus_865 = "cust(55)" + 30 * 55;
Plus_879 = "cust(56)" + 30 * 56;
Plus_893 = "cust(57)" + 30 * 57;
Plus_906 = "cust(58)" + 30 * 58;
Plus_919 = "cust(59)" + 30 * 59;
Plus_932 = "cust(60)" + 30 * 60;
Plus_946 = "cust(61)" + 30 * 61;
Plus_960 = "cust(62)" + 30 * 62;
Plus_974 = "cust(63)" + 30 * 63;
Plus_988 = "cust(64)" + 30 * 64;
Plus_1002 = "cust(65)" + 30 * 65;
Plus_1016 = "cust(66)" + 30 * 66;
Plus_1030 = "cust(67)" + 30 * 67;
Plus_1044 = "cust(68)" + 30 * 68;
Plus_1058 = "cust(69)" + 30 * 69;
Plus_1072 = "cust(70)" + 30 * 70;
Plus_1086 = "cust(71)" + 30 * 71;
Plus_1100 = "cust(72)" + 30 * 72;
Plus_1114 = "cust(73)" + 30 * 73;
Plus_1128 = "cust(74)" + 30 * 74;
Plus_1142 = "cust(75)" + 30 * 75;
Plus_1156 = "cust(76)" + 30 * 76;
Plus_1170 = "cust(77)" + 30 * 77;
Plus_1184 = "cust(78)" + 30 * 78;
Plus_1198 = "cust(79)" + 30 * 79;
Plus_1212 = "cust(80)" + 30 * 80;
Plus_1226 = "cust(81)" + 30 * 81;
Plus_1240 = "cust(82)" + 30 * 82;
Plus_1254 = "cust(83)" + 30 * 83;
Plus_1268 = "cust(84)" + 30 * 84;
Plus_1282 = "cust(85)" + 30 * 85;
Plus_1296 = "cust(86)" + 30 * 86;
Plus_1310 = "cust(87)" + 30 * 87;
Plus_1324 = "cust(88)" + 30 * 88;
Plus_1337 = "cust(89)" + 30 * 89;
obj = sum([2375 * "open(0)", 5305 * "open(1)", 3067 * "open(2)", 1141 * "open(3)", 5881 * "open(4)", 4215 * "open(5)", 2801 * "open(6)", 1154 * "open(7)", 1049 * "open(8)", 4205 * "open(9)", 4572 * "open(10)", 1668 * "open(11)", 5032 * "open(12)", 1491 * "open(13)", 1453 * "open(14)", 5719 * "open(15)", 3439 * "open(16)", 1739 * "open(17)", 4060 * "open(18)", 1183 * "open(19)", 2352 * "open(20)", 4861 * "open(21)", 4586 * "open(22)", 2631 * "open(23)", 5227 * "open(24)", 1135 * "open(25)", 4784 * "open(26)", 4732 * "open(27)", 1585 * "open(28)", 3492 * "open(29)"]) + sum([element([28, 30, 25, 60, 8, 95, 93, 19, 34, 57, 79, 27, 38, 43, 80, 54, 48, 2, 46, 22, 3, 57, 45, 75, 85, 37, 88, 83, 98, 98], "cust(0)"), element([4, 73, 85, 86, 9, 63, 42, 6, 67, 8, 55, 77, 7, 29, 62, 81, 4, 11, 70, 1, 77, 99, 7, 23, 52, 28, 46, 1, 43, 15], "cust(1)"), element([88, 91, 65, 92, 76, 69, 86, 7, 58, 87, 84, 1, 5, 20, 43, 67, 72, 25, 37, 47, 89, 14, 21, 79, 52, 91, 2, 31, 82, 79], "cust(2)"), element([99, 4, 62, 44, 58, 86, 68, 55, 12, 41, 72, 25, 28, 57, 74, 98, 60, 54, 92, 44, 31, 67, 40, 81, 51, 27, 36, 26, 20, 79], "cust(3)"), element([52, 78, 68, 21, 30, 68, 98, 25, 9, 13, 4, 78, 25, 17, 18, 93, 83, 62, 88, 53, 45, 66, 89, 45, 25, 36, 59, 92, 66, 20], "cust(4)"), element([22, 91, 10, 32, 98, 47, 62, 69, 58, 9, 60, 17, 79, 36, 32, 75, 42, 55, 22, 47, 51, 40, 55, 69, 14, 96, 83, 96, 73, 23], "cust(5)"), element([16, 63, 3, 86, 92, 50, 84, 23, 31, 62, 61, 84, 47, 48, 94, 98, 98, 37, 40, 40, 41, 94, 71, 27, 27, 42, 23, 42, 31, 13], "cust(6)"), element([96, 49, 25, 79, 76, 75, 90, 29, 38, 11, 26, 80, 80, 90, 72, 52, 94, 52, 92, 95, 9, 85, 93, 67, 82, 89, 63, 30, 12, 3], "cust(7)"), element([23, 97, 22, 8, 5, 37, 18, 49, 61, 68, 56, 61, 53, 20, 55, 80, 5, 1, 81, 92, 18, 4, 53, 63, 68, 52, 49, 90, 40, 72], "cust(8)"), element([71, 33, 99, 4, 51, 8, 84, 80, 83, 95, 77, 45, 7, 46, 33, 4, 61, 30, 12, 94, 92, 84, 66, 93, 1, 55, 69, 18, 7, 59], "cust(9)"), element([13, 23, 59, 73, 72, 30, 77, 6, 61, 72, 63, 8, 99, 67, 5, 86, 85, 38, 20, 46, 51, 52, 89, 82, 70, 11, 87, 81, 28, 60], "cust(10)"), element([73, 75, 49, 27, 89, 0, 73, 79, 64, 59, 83, 6, 9, 51, 51, 98, 63, 9, 7, 96, 70, 32, 0, 21, 49, 77, 16, 51, 40, 24], "cust(11)"), element([63, 3, 48, 68, 53, 13, 52, 48, 42, 77, 89, 30, 4, 83, 49, 12, 59, 22, 7, 14, 19, 61, 48, 73, 60, 63, 4, 4, 95, 83], "cust(12)"), element([73, 70, 44, 38, 84, 63, 99, 44, 16, 79, 60, 55, 43, 67, 68, 7, 55, 24, 33, 76, 62, 69, 26, 96, 81, 16, 88, 36, 22, 63], "cust(13)"), element([53, 22, 25, 56, 28, 36, 70, 33, 63, 76, 87, 84, 37, 42, 12, 77, 64, 19, 93, 37, 18, 54, 89, 49, 48, 53, 66, 44, 0, 99], "cust(14)"), element([61, 65, 27, 13, 80, 85, 23, 14, 86, 95, 42, 80, 62, 75, 48, 45, 61, 51, 92, 59, 84, 27, 72, 26, 50, 25, 45, 14, 84, 86], "cust(15)"), element([14, 82, 76, 42, 30, 79, 83, 26, 17, 95, 56, 12, 53, 65, 40, 44, 22, 2, 59, 6, 25, 58, 87, 32, 18, 20, 10, 78, 78, 53], "cust(16)"), element([51, 3, 33, 82, 30, 28, 50, 62, 32, 80, 71, 82, 73, 29, 88, 96, 71, 31, 54, 56, 21, 7, 35, 66, 92, 52, 60, 56, 49, 68], "cust(17)"), element([3, 60, 39, 66, 4, 48, 29, 83, 32, 35, 81, 4, 8, 65, 11, 86, 72, 10, 98, 81, 80, 79, 84, 57, 43, 30, 39, 2, 44, 51], "cust(18)"), element([19, 27, 83, 60, 68, 98, 60, 41, 45, 57, 27, 29, 7, 6, 14, 38, 90, 19, 65, 66, 10, 26, 14, 6, 71, 64, 40, 10, 96, 3], "cust(19)"), element([62, 49, 34, 35, 40, 61, 4, 72, 45, 70, 7, 55, 45, 59, 81, 60, 13, 4, 7, 38, 21, 1, 0, 4, 67, 11, 69, 56, 25, 80], "cust(20)"), element([93, 34, 6, 32, 60, 17, 92, 90, 51, 5, 97, 42, 73, 41, 81, 63, 15, 42, 79, 6, 26, 6, 58, 37, 5, 27, 57, 25, 23, 49], "cust(21)"), element([59, 72, 77, 55, 81, 99, 17, 11, 94, 57, 45, 98, 44, 11, 0, 45, 71, 7, 67, 59, 26, 46, 69, 60, 71, 4, 2, 50, 13, 82], "cust(22)"), element([41, 50, 11, 28, 7, 44, 77, 52, 95, 51, 73, 20, 72, 12, 68, 37, 52, 48, 31, 28, 2, 26, 42, 5, 9, 96, 88, 38, 22, 46], "cust(23)"), element([77, 39, 0, 84, 32, 80, 75, 74, 72, 10, 50, 91, 33, 27, 98, 26, 54, 97, 21, 63, 94, 7, 4, 54, 79, 59, 35, 11, 1, 31], "cust(24)"), element([69, 80, 6, 87, 67, 57, 30, 82, 77, 29, 22, 18, 28, 13, 6, 73, 56, 46, 9, 39, 52, 56, 80, 77, 0, 8, 14, 52, 71, 20], "cust(25)"), element([81, 49, 6, 67, 21, 41, 97, 78, 83, 85, 66, 58, 77, 81, 35, 98, 67, 19, 69, 59, 0, 73, 44, 78, 77, 82, 34, 42, 26, 7], "cust(26)"), element([90, 86, 63, 8, 16, 63, 96, 1, 62, 93, 6, 0, 93, 77, 44, 38, 39, 95, 65, 84, 91, 51, 64, 88, 47, 20, 93, 24, 2, 8], "cust(27)"), element([70, 43, 6, 15, 14, 81, 87, 74, 59, 97, 18, 65, 16, 69, 59, 41, 12, 23, 10, 92, 21, 82, 55, 30, 80, 8, 97, 98, 71, 51], "cust(28)"), element([16, 76, 59, 66, 75, 26, 78, 77, 41, 50, 58, 54, 25, 58, 58, 80, 30, 8, 25, 77, 17, 42, 5, 9, 57, 26, 79, 92, 45, 94], "cust(29)"), element([36, 14, 3, 34, 39, 23, 72, 85, 45, 68, 75, 90, 9, 70, 19, 92, 52, 16, 20, 25, 21, 4, 78, 48, 93, 31, 16, 80, 80, 24], "cust(30)"), element([41, 20, 80, 36, 79, 46, 15, 22, 77, 2, 35, 12, 74, 44, 70, 66, 48, 64, 52, 89, 11, 75, 28, 51, 76, 32, 61, 98, 68, 2], "cust(31)"), element([65, 41, 28, 13, 50, 93, 5, 83, 47, 67, 61, 98, 17, 71, 61, 10, 59, 12, 78, 23, 23, 22, 84, 50, 77, 90, 70, 56, 80, 94], "cust(32)"), element([80, 76, 18, 99, 61, 37, 85, 31, 92, 44, 36, 96, 81, 8, 81, 7, 58, 83, 29, 43, 27, 13, 28, 11, 87, 30, 60, 40, 23, 50], "cust(33)"), element([68, 63, 19, 31, 85, 51, 91, 35, 58, 60, 19, 25, 51, 10, 98, 30, 48, 69, 79, 58, 36, 89, 41, 44, 78, 60, 90, 19, 70, 32], "cust(34)"), element([64, 45, 17, 99, 73, 2, 90, 86, 58, 89, 44, 1, 22, 30, 66, 32, 25, 77, 38, 94, 44, 13, 16, 76, 16, 83, 87, 36, 65, 49], "cust(35)"), element([82, 17, 99, 3, 11, 77, 89, 75, 48, 58, 56, 38, 19, 98, 82, 40, 83, 13, 53, 55, 0, 52, 72, 0, 83, 44, 12, 11, 71, 13], "cust(36)"), element([58, 16, 44, 73, 80, 87, 2, 40, 31, 50, 15, 82, 93, 19, 34, 40, 12, 77, 18, 28, 25, 29, 91, 40, 74, 10, 51, 12, 17, 89], "cust(37)"), element([34, 5, 13, 68, 13, 73, 55, 16, 30, 34, 42, 80, 1, 3, 4, 8, 75, 87, 56, 13, 38, 19, 12, 46, 53, 86, 46, 64, 56, 47], "cust(38)"), element([98, 3, 1, 43, 17, 58, 40, 3, 19, 62, 41, 47, 73, 79, 38, 76, 82, 9, 66, 91, 15, 64, 23, 95, 73, 28, 10, 9, 27, 38], "cust(39)"), element([33, 90, 35, 34, 79, 90, 90, 36, 8, 15, 83, 42, 68, 15, 84, 45, 17, 22, 24, 75, 88, 71, 12, 62, 74, 2, 10, 54, 31, 84], "cust(40)"), element([80, 31, 4, 25, 97, 10, 78, 16, 68, 16, 48, 76, 79, 5, 47, 53, 63, 59, 48, 87, 9, 56, 33, 72, 73, 58, 90, 70, 46, 21], "cust(41)"), element([94, 4, 55, 47, 80, 8, 7, 34, 88, 86, 7, 70, 65, 73, 77, 31, 11, 70, 6, 18, 20, 51, 20, 1, 8, 95, 62, 20, 51, 33], "cust(42)"), element([10, 40, 63, 81, 9, 22, 29, 3, 60, 6, 16, 56, 8, 65, 45, 22, 23, 32, 46, 99, 70, 90, 72, 22, 28, 96, 17, 59, 57, 35], "cust(43)"), element([19, 4, 70, 28, 5, 87, 22, 21, 88, 7, 77, 36, 36, 10, 54, 33, 11, 93, 27, 69, 96, 4, 94, 81, 44, 53, 70, 33, 30, 31], "cust(44)"), element([93, 87, 93, 94, 87, 65, 10, 48, 87, 83, 48, 33, 24, 75, 40, 29, 77, 98, 91, 15, 17, 26, 97, 40, 47, 62, 77, 58, 46, 20], "cust(45)"), element([80, 78, 96, 62, 79, 49, 8, 50, 62, 86, 97, 90, 11, 94, 50, 81, 61, 69, 67, 66, 37, 89, 6, 82, 41, 8, 83, 10, 89, 66], "cust(46)"), element([7, 58, 17, 71, 97, 55, 14, 94, 25, 33, 58, 35, 53, 95, 1, 10, 67, 93, 73, 66, 11, 5, 42, 56, 60, 95, 34, 58, 30, 16], "cust(47)"), element([61, 30, 5, 96, 5, 75, 95, 87, 40, 56, 77, 3, 24, 29, 7, 56, 49, 81, 97, 78, 58, 83, 24, 45, 25, 61, 41, 87, 2, 25], "cust(48)"), element([3, 5, 41, 53, 28, 72, 42, 9, 57, 21, 74, 64, 76, 51, 80, 31, 8, 40, 1, 99, 68, 70, 35, 77, 6, 19, 69, 62, 68, 51], "cust(49)"), element([99, 67, 28, 26, 43, 15, 77, 87, 47, 59, 38, 62, 85, 7, 92, 42, 19, 10, 81, 38, 18, 13, 93, 70, 89, 88, 50, 87, 73, 4], "cust(50)"), element([97, 42, 79, 75, 57, 65, 46, 54, 12, 96, 25, 68, 96, 9, 38, 49, 36, 66, 26, 67, 91, 41, 9, 72, 92, 23, 9, 60, 52, 88], "cust(51)"), element([46, 6, 26, 52, 4, 14, 13, 43, 92, 61, 41, 99, 35, 25, 67, 11, 90, 50, 41, 61, 31, 63, 28, 73, 90, 90, 63, 66, 56, 43], "cust(52)"), element([2, 92, 36, 38, 60, 90, 56, 89, 14, 92, 31, 26, 70, 84, 0, 77, 93, 76, 64, 0, 66, 16, 99, 17, 16, 20, 32, 10, 99, 75], "cust(53)"), element([23, 81, 38, 76, 95, 94, 76, 16, 0, 13, 66, 22, 23, 75, 47, 47, 31, 76, 89, 0, 71, 84, 43, 59, 4, 77, 58, 46, 48, 89], "cust(54)"), element([20, 71, 86, 69, 62, 81, 16, 56, 69, 46, 64, 93, 18, 47, 39, 79, 54, 65, 17, 29, 46, 36, 71, 76, 89, 58, 72, 45, 1, 18], "cust(55)"), element([48, 83, 25, 5, 7, 11, 15, 24, 0, 87, 43, 57, 95, 14, 27, 74, 27, 14, 60, 24, 81, 28, 26, 30, 31, 75, 92, 51, 92, 96], "cust(56)"), element([15, 77, 19, 67, 41, 21, 59, 36, 18, 27, 94, 85, 0, 64, 88, 83, 57, 86, 96, 6, 33, 71, 5, 95, 30, 65, 44, 34, 25, 61], "cust(57)"), element([70, 86, 69, 11, 80, 96, 80, 26, 44, 66, 91, 66, 54, 25, 38, 1, 75, 77, 88, 42, 74, 59, 39, 70, 75, 0, 98, 8, 87, 3], "cust(58)"), element([72, 89, 37, 14, 93, 98, 45, 99, 63, 23, 71, 58, 68, 24, 58, 30, 4, 62, 52, 23, 70, 91, 85, 90, 46, 93, 74, 82, 90, 24], "cust(59)"), element([12, 98, 6, 77, 42, 15, 93, 24, 35, 6, 13, 31, 52, 3, 24, 25, 33, 28, 91, 12, 63, 97, 8, 49, 12, 93, 3, 26, 55, 59], "cust(60)"), element([19, 26, 42, 99, 8, 73, 18, 40, 64, 96, 43, 42, 12, 2, 75, 97, 26, 22, 40, 99, 56, 92, 11, 15, 85, 13, 19, 7, 29, 50], "cust(61)"), element([39, 47, 24, 60, 97, 7, 62, 95, 6, 0, 28, 98, 95, 99, 94, 75, 20, 73, 43, 77, 7, 38, 32, 19, 12, 6, 94, 59, 69, 17], "cust(62)"), element([5, 89, 37, 70, 95, 71, 12, 41, 18, 16, 8, 24, 41, 68, 65, 6, 54, 17, 94, 52, 99, 19, 0, 78, 75, 37, 16, 66, 74, 25], "cust(63)"), element([87, 74, 71, 61, 73, 67, 18, 99, 60, 30, 98, 64, 2, 92, 98, 80, 22, 30, 14, 24, 14, 81, 88, 47, 64, 36, 33, 89, 3, 98], "cust(64)"), element([24, 57, 16, 52, 6, 2, 3, 14, 82, 76, 49, 15, 27, 32, 74, 31, 91, 86, 21, 79, 10, 26, 88, 18, 24, 20, 25, 1, 96, 84], "cust(65)"), element([25, 82, 59, 63, 87, 16, 23, 80, 29, 10, 8, 87, 46, 30, 55, 0, 26, 87, 28, 16, 19, 44, 48, 54, 95, 49, 77, 50, 92, 1], "cust(66)"), element([59, 81, 55, 20, 96, 48, 29, 60, 68, 9, 11, 11, 79, 49, 85, 62, 68, 87, 56, 19, 87, 39, 38, 5, 33, 60, 4, 20, 97, 85], "cust(67)"), element([32, 92, 31, 93, 78, 86, 78, 21, 41, 51, 32, 70, 89, 2, 96, 67, 56, 45, 95, 82, 56, 60, 58, 0, 79, 55, 12, 78, 24, 79], "cust(68)"), element([91, 88, 13, 82, 78, 88, 26, 76, 12, 79, 6, 73, 64, 5, 15, 87, 79, 3, 12, 73, 25, 13, 60, 67, 93, 46, 50, 65, 78, 22], "cust(69)"), element([15, 77, 18, 17, 53, 79, 46, 58, 48, 99, 41, 2, 33, 97, 25, 99, 90, 81, 45, 11, 68, 12, 14, 6, 43, 81, 42, 32, 89, 78], "cust(70)"), element([93, 86, 17, 43, 14, 99, 99, 76, 69, 46, 10, 11, 78, 95, 95, 12, 29, 49, 82, 92, 92, 67, 90, 72, 10, 87, 83, 77, 53, 70], "cust(71)"), element([70, 83, 50, 73, 96, 71, 19, 67, 99, 75, 64, 65, 37, 21, 65, 25, 29, 7, 65, 12, 60, 49, 70, 41, 28, 98, 60, 42, 58, 15], "cust(72)"), element([84, 30, 95, 88, 7, 55, 94, 74, 29, 94, 11, 41, 87, 24, 95, 72, 61, 20, 92, 38, 39, 58, 6, 89, 14, 20, 28, 39, 54, 78], "cust(73)"), element([78, 65, 9, 66, 62, 77, 4, 78, 6, 20, 81, 6, 87, 15, 42, 72, 4, 80, 73, 24, 17, 13, 28, 6, 26, 93, 34, 55, 15, 52], "cust(74)"), element([70, 98, 92, 78, 78, 43, 31, 15, 72, 58, 55, 61, 94, 66, 71, 67, 97, 63, 7, 41, 67, 29, 99, 85, 54, 66, 46, 42, 23, 50], "cust(75)"), element([94, 60, 51, 18, 72, 98, 37, 38, 13, 91, 79, 22, 97, 57, 96, 67, 42, 43, 41, 50, 37, 41, 14, 3, 40, 54, 47, 45, 91, 91], "cust(76)"), element([54, 77, 49, 7, 75, 0, 58, 89, 93, 56, 8, 32, 2, 94, 79, 70, 16, 10, 84, 67, 57, 81, 94, 93, 99, 76, 19, 35, 28, 53], "cust(77)"), element([88, 95, 9, 41, 93, 96, 20, 46, 80, 8, 0, 13, 76, 73, 82, 31, 43, 37, 40, 67, 22, 82, 2, 28, 71, 70, 78, 51, 69, 10], "cust(78)"), element([75, 71, 14, 56, 69, 71, 47, 44, 71, 93, 33, 33, 89, 81, 93, 8, 93, 7, 26, 34, 63, 14, 54, 1, 25, 86, 84, 91, 54, 49], "cust(79)"), element([56, 57, 85, 83, 79, 78, 72, 48, 68, 42, 86, 63, 70, 8, 40, 60, 72, 79, 73, 33, 3, 20, 26, 15, 53, 24, 20, 91, 4, 46], "cust(80)"), element([64, 81, 90, 14, 55, 24, 89, 96, 50, 67, 62, 15, 14, 34, 34, 12, 87, 24, 41, 7, 82, 7, 95, 69, 41, 3, 76, 44, 62, 61], "cust(81)"), element([22, 53, 51, 16, 18, 10, 9, 89, 11, 41, 55, 80, 95, 76, 65, 12, 77, 14, 48, 37, 41, 39, 64, 22, 38, 91, 98, 0, 4, 18], "cust(82)"), element([0, 77, 26, 41, 68, 1, 76, 7, 99, 85, 6, 85, 95, 22, 10, 29, 53, 74, 0, 1, 98, 83, 9, 91, 51, 14, 1, 18, 42, 22], "cust(83)"), element([52, 62, 71, 59, 5, 35, 90, 91, 17, 5, 33, 50, 69, 14, 63, 17, 13, 62, 40, 90, 83, 85, 44, 25, 81, 1, 98, 46, 76, 37], "cust(84)"), element([6, 15, 27, 38, 18, 68, 53, 15, 84, 71, 28, 47, 35, 74, 13, 19, 52, 13, 17, 38, 35, 20, 53, 45, 76, 69, 48, 34, 13, 34], "cust(85)"), element([75, 27, 59, 30, 20, 23, 19, 87, 43, 88, 84, 67, 23, 84, 42, 43, 22, 78, 90, 68, 93, 72, 64, 52, 66, 48, 27, 15, 42, 18], "cust(86)"), element([31, 10, 16, 89, 53, 59, 74, 61, 41, 45, 58, 31, 57, 71, 31, 98, 92, 38, 89, 55, 34, 57, 72, 49, 68, 86, 39, 19, 66, 25], "cust(87)"), element([74, 73, 14, 16, 50, 47, 73, 73, 64, 45, 90, 2, 71, 83, 98, 5, 49, 30, 72, 5, 94, 73, 67, 53, 71, 15, 30, 29, 29, 5], "cust(88)"), element([75, 22, 32, 44, 22, 18, 13, 25, 54, 4, 87, 80, 72, 40, 31, 3, 14, 1, 84, 61, 15, 85, 56, 40, 90, 63, 59, 31, 50, 18], "cust(89)")]);
occupancy = sum([18 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 56 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 38 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 21 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 40 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 51 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 33 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 46 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 11 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 14 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 47 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 53 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 34 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 59 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 44 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 15 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 29 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 28 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 58 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 29 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 59 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 16 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 58 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 24 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 21 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 16 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 20 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 47 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 44 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 31 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 46 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 43 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 49 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 20 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 14 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 26 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 24 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 10 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 41 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 51 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 47 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 16 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 36 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 15 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 18 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 13 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 20 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 31 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 45 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 15 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 42 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 31 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 21 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 53 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 58 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 42 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 23 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 11 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 14 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 53 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 56 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 16 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 57 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 10 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 53 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 11 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 32 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 19 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 21 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 11 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 48 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 10 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 19 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 25 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 40 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 43 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 56 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 53 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 20 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 48 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 56 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 32 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 17 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 17 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 13 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 52 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 42 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 13 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 29 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90]), 37 / sum(["open(0)" * 137, "open(1)" * 122, "open(2)" * 87, "open(3)" * 125, "open(4)" * 120, "open(5)" * 47, "open(6)" * 42, "open(7)" * 157, "open(8)" * 60, "open(9)" * 134, "open(10)" * 35, "open(11)" * 120, "open(12)" * 185, "open(13)" * 86, "open(14)" * 110, "open(15)" * 115, "open(16)" * 184, "open(17)" * 107, "open(18)" * 188, "open(19)" * 96, "open(20)" * 82, "open(21)" * 68, "open(22)" * 161, "open(23)" * 123, "open(24)" * 36, "open(25)" * 49, "open(26)" * 178, "open(27)" * 179, "open(28)" * 108, "open(29)" * 90])]);
minOccup = min(["load(0)" / 137 + 1 + -"open(0)", "load(1)" / 122 + 1 + -"open(1)", "load(2)" / 87 + 1 + -"open(2)", "load(3)" / 125 + 1 + -"open(3)", "load(4)" / 120 + 1 + -"open(4)", "load(5)" / 47 + 1 + -"open(5)", "load(6)" / 42 + 1 + -"open(6)", "load(7)" / 157 + 1 + -"open(7)", "load(8)" / 60 + 1 + -"open(8)", "load(9)" / 134 + 1 + -"open(9)", "load(10)" / 35 + 1 + -"open(10)", "load(11)" / 120 + 1 + -"open(11)", "load(12)" / 185 + 1 + -"open(12)", "load(13)" / 86 + 1 + -"open(13)", "load(14)" / 110 + 1 + -"open(14)", "load(15)" / 115 + 1 + -"open(15)", "load(16)" / 184 + 1 + -"open(16)", "load(17)" / 107 + 1 + -"open(17)", "load(18)" / 188 + 1 + -"open(18)", "load(19)" / 96 + 1 + -"open(19)", "load(20)" / 82 + 1 + -"open(20)", "load(21)" / 68 + 1 + -"open(21)", "load(22)" / 161 + 1 + -"open(22)", "load(23)" / 123 + 1 + -"open(23)", "load(24)" / 36 + 1 + -"open(24)", "load(25)" / 49 + 1 + -"open(25)", "load(26)" / 178 + 1 + -"open(26)", "load(27)" / 179 + 1 + -"open(27)", "load(28)" / 108 + 1 + -"open(28)", "load(29)" / 90 + 1 + -"open(29)"]);

// ------ Objective: --------------------------------------------------------

minimize(obj);

KPIs {
  Occupancy = occupancy;
  "Min occupancy" = minOccup;
}

// ------ Constraints: ------------------------------------------------------

"cust(0)" >= 0;
"cust(0)" <= 29;
"cust(0)" >= 0;
"cust(0)" <= 29;
Plus_101 >= 0;
Plus_101 <= 29;
"cust(1)" >= 0;
"cust(1)" <= 29;
"cust(1)" >= 0;
"cust(1)" <= 29;
Plus_113 >= 30;
Plus_113 <= 59;
"cust(2)" >= 0;
"cust(2)" <= 29;
"cust(2)" >= 0;
"cust(2)" <= 29;
Plus_126 >= 60;
Plus_126 <= 89;
"cust(3)" >= 0;
"cust(3)" <= 29;
"cust(3)" >= 0;
"cust(3)" <= 29;
Plus_140 >= 90;
Plus_140 <= 119;
"cust(4)" >= 0;
"cust(4)" <= 29;
"cust(4)" >= 0;
"cust(4)" <= 29;
Plus_154 >= 120;
Plus_154 <= 149;
"cust(5)" >= 0;
"cust(5)" <= 29;
"cust(5)" >= 0;
"cust(5)" <= 29;
Plus_168 >= 150;
Plus_168 <= 179;
"cust(6)" >= 0;
"cust(6)" <= 29;
"cust(6)" >= 0;
"cust(6)" <= 29;
Plus_182 >= 180;
Plus_182 <= 209;
"cust(7)" >= 0;
"cust(7)" <= 29;
"cust(7)" >= 0;
"cust(7)" <= 29;
Plus_196 >= 210;
Plus_196 <= 239;
"cust(8)" >= 0;
"cust(8)" <= 29;
"cust(8)" >= 0;
"cust(8)" <= 29;
Plus_210 >= 240;
Plus_210 <= 269;
"cust(9)" >= 0;
"cust(9)" <= 29;
"cust(9)" >= 0;
"cust(9)" <= 29;
Plus_224 >= 270;
Plus_224 <= 299;
"cust(10)" >= 0;
"cust(10)" <= 29;
"cust(10)" >= 0;
"cust(10)" <= 29;
Plus_238 >= 300;
Plus_238 <= 329;
"cust(11)" >= 0;
"cust(11)" <= 29;
"cust(11)" >= 0;
"cust(11)" <= 29;
Plus_252 >= 330;
Plus_252 <= 359;
"cust(12)" >= 0;
"cust(12)" <= 29;
"cust(12)" >= 0;
"cust(12)" <= 29;
Plus_266 >= 360;
Plus_266 <= 389;
"cust(13)" >= 0;
"cust(13)" <= 29;
"cust(13)" >= 0;
"cust(13)" <= 29;
Plus_280 >= 390;
Plus_280 <= 419;
"cust(14)" >= 0;
"cust(14)" <= 29;
"cust(14)" >= 0;
"cust(14)" <= 29;
Plus_294 >= 420;
Plus_294 <= 449;
"cust(15)" >= 0;
"cust(15)" <= 29;
"cust(15)" >= 0;
"cust(15)" <= 29;
Plus_308 >= 450;
Plus_308 <= 479;
"cust(16)" >= 0;
"cust(16)" <= 29;
"cust(16)" >= 0;
"cust(16)" <= 29;
Plus_322 >= 480;
Plus_322 <= 509;
"cust(17)" >= 0;
"cust(17)" <= 29;
"cust(17)" >= 0;
"cust(17)" <= 29;
Plus_336 >= 510;
Plus_336 <= 539;
"cust(18)" >= 0;
"cust(18)" <= 29;
"cust(18)" >= 0;
"cust(18)" <= 29;
Plus_350 >= 540;
Plus_350 <= 569;
"cust(19)" >= 0;
"cust(19)" <= 29;
"cust(19)" >= 0;
"cust(19)" <= 29;
Plus_364 >= 570;
Plus_364 <= 599;
"cust(20)" >= 0;
"cust(20)" <= 29;
"cust(20)" >= 0;
"cust(20)" <= 29;
Plus_378 >= 600;
Plus_378 <= 629;
"cust(21)" >= 0;
"cust(21)" <= 29;
"cust(21)" >= 0;
"cust(21)" <= 29;
Plus_392 >= 630;
Plus_392 <= 659;
"cust(22)" >= 0;
"cust(22)" <= 29;
"cust(22)" >= 0;
"cust(22)" <= 29;
Plus_406 >= 660;
Plus_406 <= 689;
"cust(23)" >= 0;
"cust(23)" <= 29;
"cust(23)" >= 0;
"cust(23)" <= 29;
Plus_420 >= 690;
Plus_420 <= 719;
"cust(24)" >= 0;
"cust(24)" <= 29;
"cust(24)" >= 0;
"cust(24)" <= 29;
Plus_434 >= 720;
Plus_434 <= 749;
"cust(25)" >= 0;
"cust(25)" <= 29;
"cust(25)" >= 0;
"cust(25)" <= 29;
Plus_448 >= 750;
Plus_448 <= 779;
"cust(26)" >= 0;
"cust(26)" <= 29;
"cust(26)" >= 0;
"cust(26)" <= 29;
Plus_462 >= 780;
Plus_462 <= 809;
"cust(27)" >= 0;
"cust(27)" <= 29;
"cust(27)" >= 0;
"cust(27)" <= 29;
Plus_476 >= 810;
Plus_476 <= 839;
"cust(28)" >= 0;
"cust(28)" <= 29;
"cust(28)" >= 0;
"cust(28)" <= 29;
Plus_490 >= 840;
Plus_490 <= 869;
"cust(29)" >= 0;
"cust(29)" <= 29;
"cust(29)" >= 0;
"cust(29)" <= 29;
Plus_503 >= 870;
Plus_503 <= 899;
"cust(30)" >= 0;
"cust(30)" <= 29;
"cust(30)" >= 0;
"cust(30)" <= 29;
Plus_516 >= 900;
Plus_516 <= 929;
"cust(31)" >= 0;
"cust(31)" <= 29;
"cust(31)" >= 0;
"cust(31)" <= 29;
Plus_530 >= 930;
Plus_530 <= 959;
"cust(32)" >= 0;
"cust(32)" <= 29;
"cust(32)" >= 0;
"cust(32)" <= 29;
Plus_544 >= 960;
Plus_544 <= 989;
"cust(33)" >= 0;
"cust(33)" <= 29;
"cust(33)" >= 0;
"cust(33)" <= 29;
Plus_558 >= 990;
Plus_558 <= 1019;
"cust(34)" >= 0;
"cust(34)" <= 29;
"cust(34)" >= 0;
"cust(34)" <= 29;
Plus_572 >= 1020;
Plus_572 <= 1049;
"cust(35)" >= 0;
"cust(35)" <= 29;
"cust(35)" >= 0;
"cust(35)" <= 29;
Plus_585 >= 1050;
Plus_585 <= 1079;
"cust(36)" >= 0;
"cust(36)" <= 29;
"cust(36)" >= 0;
"cust(36)" <= 29;
Plus_599 >= 1080;
Plus_599 <= 1109;
"cust(37)" >= 0;
"cust(37)" <= 29;
"cust(37)" >= 0;
"cust(37)" <= 29;
Plus_613 >= 1110;
Plus_613 <= 1139;
"cust(38)" >= 0;
"cust(38)" <= 29;
"cust(38)" >= 0;
"cust(38)" <= 29;
Plus_627 >= 1140;
Plus_627 <= 1169;
"cust(39)" >= 0;
"cust(39)" <= 29;
"cust(39)" >= 0;
"cust(39)" <= 29;
Plus_641 >= 1170;
Plus_641 <= 1199;
"cust(40)" >= 0;
"cust(40)" <= 29;
"cust(40)" >= 0;
"cust(40)" <= 29;
Plus_655 >= 1200;
Plus_655 <= 1229;
"cust(41)" >= 0;
"cust(41)" <= 29;
"cust(41)" >= 0;
"cust(41)" <= 29;
Plus_669 >= 1230;
Plus_669 <= 1259;
"cust(42)" >= 0;
"cust(42)" <= 29;
"cust(42)" >= 0;
"cust(42)" <= 29;
Plus_683 >= 1260;
Plus_683 <= 1289;
"cust(43)" >= 0;
"cust(43)" <= 29;
"cust(43)" >= 0;
"cust(43)" <= 29;
Plus_697 >= 1290;
Plus_697 <= 1319;
"cust(44)" >= 0;
"cust(44)" <= 29;
"cust(44)" >= 0;
"cust(44)" <= 29;
Plus_711 >= 1320;
Plus_711 <= 1349;
"cust(45)" >= 0;
"cust(45)" <= 29;
"cust(45)" >= 0;
"cust(45)" <= 29;
Plus_725 >= 1350;
Plus_725 <= 1379;
"cust(46)" >= 0;
"cust(46)" <= 29;
"cust(46)" >= 0;
"cust(46)" <= 29;
Plus_739 >= 1380;
Plus_739 <= 1409;
"cust(47)" >= 0;
"cust(47)" <= 29;
"cust(47)" >= 0;
"cust(47)" <= 29;
Plus_753 >= 1410;
Plus_753 <= 1439;
"cust(48)" >= 0;
"cust(48)" <= 29;
"cust(48)" >= 0;
"cust(48)" <= 29;
Plus_767 >= 1440;
Plus_767 <= 1469;
"cust(49)" >= 0;
"cust(49)" <= 29;
"cust(49)" >= 0;
"cust(49)" <= 29;
Plus_781 >= 1470;
Plus_781 <= 1499;
"cust(50)" >= 0;
"cust(50)" <= 29;
"cust(50)" >= 0;
"cust(50)" <= 29;
Plus_795 >= 1500;
Plus_795 <= 1529;
"cust(51)" >= 0;
"cust(51)" <= 29;
"cust(51)" >= 0;
"cust(51)" <= 29;
Plus_809 >= 1530;
Plus_809 <= 1559;
"cust(52)" >= 0;
"cust(52)" <= 29;
"cust(52)" >= 0;
"cust(52)" <= 29;
Plus_823 >= 1560;
Plus_823 <= 1589;
"cust(53)" >= 0;
"cust(53)" <= 29;
"cust(53)" >= 0;
"cust(53)" <= 29;
Plus_837 >= 1590;
Plus_837 <= 1619;
"cust(54)" >= 0;
"cust(54)" <= 29;
"cust(54)" >= 0;
"cust(54)" <= 29;
Plus_851 >= 1620;
Plus_851 <= 1649;
"cust(55)" >= 0;
"cust(55)" <= 29;
"cust(55)" >= 0;
"cust(55)" <= 29;
Plus_865 >= 1650;
Plus_865 <= 1679;
"cust(56)" >= 0;
"cust(56)" <= 29;
"cust(56)" >= 0;
"cust(56)" <= 29;
Plus_879 >= 1680;
Plus_879 <= 1709;
"cust(57)" >= 0;
"cust(57)" <= 29;
"cust(57)" >= 0;
"cust(57)" <= 29;
Plus_893 >= 1710;
Plus_893 <= 1739;
"cust(58)" >= 0;
"cust(58)" <= 29;
"cust(58)" >= 0;
"cust(58)" <= 29;
Plus_906 >= 1740;
Plus_906 <= 1769;
"cust(59)" >= 0;
"cust(59)" <= 29;
"cust(59)" >= 0;
"cust(59)" <= 29;
Plus_919 >= 1770;
Plus_919 <= 1799;
"cust(60)" >= 0;
"cust(60)" <= 29;
"cust(60)" >= 0;
"cust(60)" <= 29;
Plus_932 >= 1800;
Plus_932 <= 1829;
"cust(61)" >= 0;
"cust(61)" <= 29;
"cust(61)" >= 0;
"cust(61)" <= 29;
Plus_946 >= 1830;
Plus_946 <= 1859;
"cust(62)" >= 0;
"cust(62)" <= 29;
"cust(62)" >= 0;
"cust(62)" <= 29;
Plus_960 >= 1860;
Plus_960 <= 1889;
"cust(63)" >= 0;
"cust(63)" <= 29;
"cust(63)" >= 0;
"cust(63)" <= 29;
Plus_974 >= 1890;
Plus_974 <= 1919;
"cust(64)" >= 0;
"cust(64)" <= 29;
"cust(64)" >= 0;
"cust(64)" <= 29;
Plus_988 >= 1920;
Plus_988 <= 1949;
"cust(65)" >= 0;
"cust(65)" <= 29;
"cust(65)" >= 0;
"cust(65)" <= 29;
Plus_1002 >= 1950;
Plus_1002 <= 1979;
"cust(66)" >= 0;
"cust(66)" <= 29;
"cust(66)" >= 0;
"cust(66)" <= 29;
Plus_1016 >= 1980;
Plus_1016 <= 2009;
"cust(67)" >= 0;
"cust(67)" <= 29;
"cust(67)" >= 0;
"cust(67)" <= 29;
Plus_1030 >= 2010;
Plus_1030 <= 2039;
"cust(68)" >= 0;
"cust(68)" <= 29;
"cust(68)" >= 0;
"cust(68)" <= 29;
Plus_1044 >= 2040;
Plus_1044 <= 2069;
"cust(69)" >= 0;
"cust(69)" <= 29;
"cust(69)" >= 0;
"cust(69)" <= 29;
Plus_1058 >= 2070;
Plus_1058 <= 2099;
"cust(70)" >= 0;
"cust(70)" <= 29;
"cust(70)" >= 0;
"cust(70)" <= 29;
Plus_1072 >= 2100;
Plus_1072 <= 2129;
"cust(71)" >= 0;
"cust(71)" <= 29;
"cust(71)" >= 0;
"cust(71)" <= 29;
Plus_1086 >= 2130;
Plus_1086 <= 2159;
"cust(72)" >= 0;
"cust(72)" <= 29;
"cust(72)" >= 0;
"cust(72)" <= 29;
Plus_1100 >= 2160;
Plus_1100 <= 2189;
"cust(73)" >= 0;
"cust(73)" <= 29;
"cust(73)" >= 0;
"cust(73)" <= 29;
Plus_1114 >= 2190;
Plus_1114 <= 2219;
"cust(74)" >= 0;
"cust(74)" <= 29;
"cust(74)" >= 0;
"cust(74)" <= 29;
Plus_1128 >= 2220;
Plus_1128 <= 2249;
"cust(75)" >= 0;
"cust(75)" <= 29;
"cust(75)" >= 0;
"cust(75)" <= 29;
Plus_1142 >= 2250;
Plus_1142 <= 2279;
"cust(76)" >= 0;
"cust(76)" <= 29;
"cust(76)" >= 0;
"cust(76)" <= 29;
Plus_1156 >= 2280;
Plus_1156 <= 2309;
"cust(77)" >= 0;
"cust(77)" <= 29;
"cust(77)" >= 0;
"cust(77)" <= 29;
Plus_1170 >= 2310;
Plus_1170 <= 2339;
"cust(78)" >= 0;
"cust(78)" <= 29;
"cust(78)" >= 0;
"cust(78)" <= 29;
Plus_1184 >= 2340;
Plus_1184 <= 2369;
"cust(79)" >= 0;
"cust(79)" <= 29;
"cust(79)" >= 0;
"cust(79)" <= 29;
Plus_1198 >= 2370;
Plus_1198 <= 2399;
"cust(80)" >= 0;
"cust(80)" <= 29;
"cust(80)" >= 0;
"cust(80)" <= 29;
Plus_1212 >= 2400;
Plus_1212 <= 2429;
"cust(81)" >= 0;
"cust(81)" <= 29;
"cust(81)" >= 0;
"cust(81)" <= 29;
Plus_1226 >= 2430;
Plus_1226 <= 2459;
"cust(82)" >= 0;
"cust(82)" <= 29;
"cust(82)" >= 0;
"cust(82)" <= 29;
Plus_1240 >= 2460;
Plus_1240 <= 2489;
"cust(83)" >= 0;
"cust(83)" <= 29;
"cust(83)" >= 0;
"cust(83)" <= 29;
Plus_1254 >= 2490;
Plus_1254 <= 2519;
"cust(84)" >= 0;
"cust(84)" <= 29;
"cust(84)" >= 0;
"cust(84)" <= 29;
Plus_1268 >= 2520;
Plus_1268 <= 2549;
"cust(85)" >= 0;
"cust(85)" <= 29;
"cust(85)" >= 0;
"cust(85)" <= 29;
Plus_1282 >= 2550;
Plus_1282 <= 2579;
"cust(86)" >= 0;
"cust(86)" <= 29;
"cust(86)" >= 0;
"cust(86)" <= 29;
Plus_1296 >= 2580;
Plus_1296 <= 2609;
"cust(87)" >= 0;
"cust(87)" <= 29;
"cust(87)" >= 0;
"cust(87)" <= 29;
Plus_1310 >= 2610;
Plus_1310 <= 2639;
"cust(88)" >= 0;
"cust(88)" <= 29;
"cust(88)" >= 0;
"cust(88)" <= 29;
Plus_1324 >= 2640;
Plus_1324 <= 2669;
"cust(89)" >= 0;
"cust(89)" <= 29;
"cust(89)" >= 0;
"cust(89)" <= 29;
Plus_1337 >= 2670;
Plus_1337 <= 2699;
"open(0)" == ("load(0)" >= 1);
"open(1)" == ("load(1)" >= 1);
"open(2)" == ("load(2)" >= 1);
"open(3)" == ("load(3)" >= 1);
"open(4)" == ("load(4)" >= 1);
"open(5)" == ("load(5)" >= 1);
"open(6)" == ("load(6)" >= 1);
"open(7)" == ("load(7)" >= 1);
"open(8)" == ("load(8)" >= 1);
"open(9)" == ("load(9)" >= 1);
"open(10)" == ("load(10)" >= 1);
"open(11)" == ("load(11)" >= 1);
"open(12)" == ("load(12)" >= 1);
"open(13)" == ("load(13)" >= 1);
"open(14)" == ("load(14)" >= 1);
"open(15)" == ("load(15)" >= 1);
"open(16)" == ("load(16)" >= 1);
"open(17)" == ("load(17)" >= 1);
"open(18)" == ("load(18)" >= 1);
"open(19)" == ("load(19)" >= 1);
"open(20)" == ("load(20)" >= 1);
"open(21)" == ("load(21)" >= 1);
"open(22)" == ("load(22)" >= 1);
"open(23)" == ("load(23)" >= 1);
"open(24)" == ("load(24)" >= 1);
"open(25)" == ("load(25)" >= 1);
"open(26)" == ("load(26)" >= 1);
"open(27)" == ("load(27)" >= 1);
"open(28)" == ("load(28)" >= 1);
"open(29)" == ("load(29)" >= 1);
true();
pack(["load(0)", "load(1)", "load(2)", "load(3)", "load(4)", "load(5)", "load(6)", "load(7)", "load(8)", "load(9)", "load(10)", "load(11)", "load(12)", "load(13)", "load(14)", "load(15)", "load(16)", "load(17)", "load(18)", "load(19)", "load(20)", "load(21)", "load(22)", "load(23)", "load(24)", "load(25)", "load(26)", "load(27)", "load(28)", "load(29)"], ["cust(0)", "cust(1)", "cust(2)", "cust(3)", "cust(4)", "cust(5)", "cust(6)", "cust(7)", "cust(8)", "cust(9)", "cust(10)", "cust(11)", "cust(12)", "cust(13)", "cust(14)", "cust(15)", "cust(16)", "cust(17)", "cust(18)", "cust(19)", "cust(20)", "cust(21)", "cust(22)", "cust(23)", "cust(24)", "cust(25)", "cust(26)", "cust(27)", "cust(28)", "cust(29)", "cust(30)", "cust(31)", "cust(32)", "cust(33)", "cust(34)", "cust(35)", "cust(36)", "cust(37)", "cust(38)", "cust(39)", "cust(40)", "cust(41)", "cust(42)", "cust(43)", "cust(44)", "cust(45)", "cust(46)", "cust(47)", "cust(48)", "cust(49)", "cust(50)", "cust(51)", "cust(52)", "cust(53)", "cust(54)", "cust(55)", "cust(56)", "cust(57)", "cust(58)", "cust(59)", "cust(60)", "cust(61)", "cust(62)", "cust(63)", "cust(64)", "cust(65)", "cust(66)", "cust(67)", "cust(68)", "cust(69)", "cust(70)", "cust(71)", "cust(72)", "cust(73)", "cust(74)", "cust(75)", "cust(76)", "cust(77)", "cust(78)", "cust(79)", "cust(80)", "cust(81)", "cust(82)", "cust(83)", "cust(84)", "cust(85)", "cust(86)", "cust(87)", "cust(88)", "cust(89)"], [18, 56, 38, 21, 40, 51, 33, 46, 11, 14, 47, 53, 34, 59, 44, 15, 29, 28, 58, 29, 59, 16, 58, 24, 21, 16, 20, 47, 44, 31, 46, 43, 49, 20, 14, 26, 24, 10, 41, 51, 47, 16, 36, 15, 18, 13, 20, 31, 45, 15, 42, 31, 21, 53, 58, 42, 23, 11, 14, 53, 56, 16, 57, 10, 53, 11, 32, 19, 21, 11, 48, 10, 19, 25, 40, 43, 56, 53, 20, 48, 56, 32, 17, 17, 13, 52, 42, 13, 29, 37]);

parameters {
  TimeLimit = 10;
  LogPeriod = 10000;
}

